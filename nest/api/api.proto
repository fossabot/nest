syntax = "proto3";

package api;

message Record {
  int64 Timestamp = 1;
  bytes Topic = 2;
  bytes Payload = 3;
}

message PutRecordsRequest { repeated Record Records = 1; }
message PutRecordsResponse {}
message GetRecordsRequest {
  int64 FromOffset = 1;
  repeated bytes Patterns = 2;
}
message GetRecordsResponse { repeated Record Records = 1; }
message DumpRequest { string DestinationURL = 1; }
message DumpResponse {
  int64 StartedAt = 1;
  int64 ProgressBytes = 2;
  int64 TotalBytes = 3;
}
message SSTRequest {
  uint64 ToOffset = 1;
  uint64 FromOffset = 2;
};
message SSTResponseChunk { bytes Chunk = 1; };
message LoadRequest { string SourceURL = 1; }
message LoadResponse {
  int64 StartedAt = 1;
  int64 ProgressBytes = 2;
  int64 TotalBytes = 3;
}

message TopicMetadata {
  bytes Name = 1;
  uint64 MessageCount = 2;
  Record LastRecord = 3;
  uint64 SizeInBytes = 4;
  string GuessedContentType = 5;
}

message ListTopicsRequest { bytes Pattern = 1; }
message ListTopicsResponse { repeated TopicMetadata TopicMetadatas = 1; }

message GetTopicsRequest { bytes Pattern = 1; }
message GetTopicsResponse { repeated Record Records = 1; }

service Messages {
  rpc SST(SSTRequest) returns (stream SSTResponseChunk) {}
  rpc Dump(DumpRequest) returns (stream DumpResponse) {}
  rpc Load(LoadRequest) returns (stream LoadResponse) {}
  rpc PutRecords(PutRecordsRequest) returns (PutRecordsResponse) {}
  rpc StreamRecords(GetRecordsRequest) returns (stream GetRecordsResponse) {}
  rpc GetRecords(GetRecordsRequest) returns (stream GetRecordsResponse) {}
  rpc ListTopics(ListTopicsRequest) returns (ListTopicsResponse) {}
  rpc GetTopics(GetTopicsRequest) returns (stream GetTopicsResponse) {}
}
